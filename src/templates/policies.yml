Resources:
  # This is a Policy that allows a Resource to Get/Create/Update/Delete stuff in the coa-publisher s3 bucket.
  PublisherBucketPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PublisherBucket-${env:DEPLOY_ENV}
      Roles:
        - !Ref CodeBuildRole
        - !Ref JanisBuilderTaskExecutionRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              # allow reading from coa-publisher-codebuild s3 bucket
              - 's3:ListBucket'
            Resource: 'arn:aws:s3:::coa-publisher'
          - Effect: Allow
            Action:
              # allow GET/PUT for objects in coa-publisher-codebuild s3 bucket
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:DeleteObject'
              - 's3:PutObject'
            Resource: 'arn:aws:s3:::coa-publisher/*'

  # This is a Policy that allows a Resource to Get/Create/Update/Delete stuff in the StagingBucket s3 bucket.
  StagingBucketPolicy:
    Type: AWS::IAM::Policy
    # If we are on "staging" DEPLOY_ENV, then we'll create this policy
    # and add it to CodeBuildRole and JanisBuilderTaskExecutionRole.
    Condition: IsStaging
    Properties:
      PolicyName: StagingBucket-${env:DEPLOY_ENV}
      Roles:
        - !Ref CodeBuildRole
        - !Ref JanisBuilderTaskExecutionRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 's3:ListBucket'
            Resource: 'arn:aws:s3:::coa-janis-austin-gov-staging'
            # Condition clauses within Policies are different from Condition clauses for Resources.
            # So our original IsStaging clause won't work here.
            # So to get that same logic (of only adding this permission to the staging env),
            # we check if the "user:env" tag equals "staging".
            Condition:
              StringEquals:
                aws:PrincipalTag/user:env: staging
          - Effect: Allow
            Action:
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:DeleteObject'
              - 's3:PutObject'
            Resource: 'arn:aws:s3:::coa-janis-austin-gov-staging/*'

  # This is a Policy that allows a Resource to Get/Create/Update/Delete stuff in the Production s3 bucket.
  ProductionBucketPolicy:
    Type: AWS::IAM::Policy
    Condition: IsProduction
    Properties:
      PolicyName: ProductionBucket-${env:DEPLOY_ENV}
      Roles:
        - !Ref CodeBuildRole
        - !Ref JanisBuilderTaskExecutionRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 's3:ListBucket'
            Resource: 'arn:aws:s3:::coa-janis-austin-gov-production'
            Condition:
              StringEquals:
                aws:PrincipalTag/user:env: production
          - Effect: Allow
            Action:
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:DeleteObject'
              - 's3:PutObject'
            Resource: 'arn:aws:s3:::coa-janis-austin-gov-production/*'

  # Allows cache invalidations on Staging Cloudfront Distribution
  StagingCacheInvalidationPolicy:
    Type: AWS::IAM::Policy
    Condition: IsStaging
    Properties:
      PolicyName: StagingCacheInvalidation-${env:DEPLOY_ENV}
      Roles:
        - !Ref CodeBuildRole
        - !Ref JanisBuilderTaskExecutionRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'cloudfront:GetDistribution'
              - 'cloudfront:GetStreamingDistribution'
              - 'cloudfront:GetDistributionConfig'
              - 'cloudfront:ListDistributions'
              - 'cloudfront:ListCloudFrontOriginAccessIdentities'
              - 'cloudfront:CreateInvalidation'
              - 'cloudfront:GetInvalidation'
              - 'cloudfront:ListInvalidations'
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:cloudfront::"
                  - !Ref AWS::AccountId
                  - ":distribution/"
                  - !Ref StagingCloudfrontDistribution

  # Allows cache invalidations on Production Cloudfront Distribution
  ProductionCacheInvalidationPolicy:
    Type: AWS::IAM::Policy
    Condition: IsProduction
    Properties:
      PolicyName: ProductionCacheInvalidation-${env:DEPLOY_ENV}
      Roles:
        - !Ref CodeBuildRole
        - !Ref JanisBuilderTaskExecutionRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'cloudfront:GetDistribution'
              - 'cloudfront:GetStreamingDistribution'
              - 'cloudfront:GetDistributionConfig'
              - 'cloudfront:ListDistributions'
              - 'cloudfront:ListCloudFrontOriginAccessIdentities'
              - 'cloudfront:CreateInvalidation'
              - 'cloudfront:GetInvalidation'
              - 'cloudfront:ListInvalidations'
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:cloudfront::"
                  - !Ref AWS::AccountId
                  - ":distribution/"
                  - ${ssm:/coa-publisher/production/cloudfront_distribution_id}
